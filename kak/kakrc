# Set the colour scheme
colorscheme ef-night

# Width of a tab
set-option global tabstop 4

# Indent with 4 spaces
set-option global indentwidth 4

# Always keep one line and three columns displayed around the cursor
set-option global scrolloff 8,3

# Display the status bar on top
set-option global ui_options ncurses_status_on_top=true

# Display line numbers
add-highlighter global/ number-lines -hlcursor -relative -separator "  " -cursor-separator " |"

# Highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error

# Softwrap long lines
add-highlighter global/ wrap -word -indent

# unselect on <esc>
map global normal <esc> ";,"

##### USER MAPPINGS #####
map -docstring "force quit without saving" global user q "<esc>: q!<ret>"
map -docstring "save without quiting" global user s '<esc>: write<ret>: echo "File saved!"<ret>'
map -docstring "save to new file without quiting" global user a '<esc>: write '
map -docstring "force quit and save" global user f '<esc>: write<ret>: echo "File saved!"<ret>: q!<ret>'

##### CUSTOM USER MAPPINGS #####
declare-user-mode mod
map global insert <c-space> '<esc>: enter-user-mode mod<ret>'
map -docstring "force quit without saving" global mod q "<esc>: q!<ret>"
map -docstring "save without quiting" global mod s '<esc>: write<ret>: echo "File saved!"<ret>'
map -docstring "save to new file without quiting" global mod a '<esc>: write '
map -docstring "force quit and save" global mod f '<esc>: write<ret>: echo "File saved!"<ret>: q!<ret>'

# Clipboard management mappings
map global normal Y '<a-|>xsel -ib<ret>'
map global normal P '<a-!>xsel -ob<ret>'

# Shortcut to quickly exit the editor
define-command -docstring "save and quit" x "write-all; quit"

# Show matching braces
add-highlighter global/ show-matching

# map Ctrl+d to <esc>
map global insert <c-d> <esc>
map global prompt <c-d> <esc>

# Bind Ctrl+s to save
map global normal <c-s> ': write<ret>: echo "File saved!"<ret>'
map global insert <c-s> '<esc>: write<ret>: echo "File saved!"<ret>'

# comment lines
map global normal '#' ': comment-line<ret>'
map global insert <c-/> '<esc>:comment-line<ret>'
# map global normal <a-#> ': comment-block<ret>'
# map global normal '=' ': format<ret>'

# Remove assistant
set-option global ui_options terminal_assistant=cat # clippy, dilbert, cat, and none

# Add byline module (x and X to select and unselect lines)
source ~/.config/kak/plugins/byline.kak
require-module "byline"

# Use tabs to auto-complete
hook global InsertCompletionShow .* %{ map window insert <tab> <c-n>; map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p> }

# Highlight TODO FIXME XXX NOTE HACK
add-highlighter global/ regex ^(?:(#+)?(\s)?)\b(TODO|FIXME|XXX|NOTE|HACK)\b 3:default+rb

# Experimental - highlight xml tags
map -docstring "xml tag objet" global object t %{c<lt>([\w.]+)\b[^>]*?(?<lt>!/)>,<lt>/([\w.]+)\b[^>]*?(?<lt>!/)><ret>}

# Set client and session
set-option global modelinefmt '%val{bufname} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} %sh{whoami}@%sh{hostname}'
